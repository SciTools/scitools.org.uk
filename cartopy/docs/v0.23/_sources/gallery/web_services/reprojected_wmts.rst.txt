
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/web_services/reprojected_wmts.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_web_services_reprojected_wmts.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_web_services_reprojected_wmts.py:


Displaying WMTS tiled map data on an arbitrary projection
---------------------------------------------------------

This example displays imagery from a web map tile service on two different
projections, one of which is not provided by the service.

This result can also be interactively panned and zoomed.

The example WMTS layer is a single composite of data sampled over nine days
in April 2012 and thirteen days in October 2012 showing the Earth at night.
It does not vary over time.

The imagery was collected by the Suomi National Polar-orbiting Partnership
(Suomi NPP) weather satellite operated by the United States National Oceanic
and Atmospheric Administration (NOAA).

.. GENERATED FROM PYTHON SOURCE LINES 19-56


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/home/circleci/project/examples/web_services/reprojected_wmts.py", line 55, in <module>
        plot_city_lights()
      File "/home/circleci/project/examples/web_services/reprojected_wmts.py", line 41, in plot_city_lights
        ax.add_wmts(base_uri, layer_name=layer_name)
      File "/home/circleci/project/lib/cartopy/mpl/geoaxes.py", line 2257, in add_wmts
        wmts = WMTSRasterSource(wmts, layer_name,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      File "/home/circleci/project/lib/cartopy/io/ogc_clients.py", line 379, in __init__
        wmts = owslib.wmts.WebMapTileService(wmts)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      File "/home/circleci/.local/lib/python3.11/site-packages/owslib/wmts.py", line 197, in __init__
        self._buildMetadata(parse_remote_metadata)
      File "/home/circleci/.local/lib/python3.11/site-packages/owslib/wmts.py", line 248, in _buildMetadata
        gather_layers(caps, None)
      File "/home/circleci/.local/lib/python3.11/site-packages/owslib/wmts.py", line 239, in gather_layers
        cm = ContentMetadata(
             ^^^^^^^^^^^^^^^^
      File "/home/circleci/.local/lib/python3.11/site-packages/owslib/wmts.py", line 819, in __init__
        raise ValueError(
    ValueError: <Element {http://www.opengis.net/wmts/1.0}Dimension at 0x7f1a259aa100> list of values can not be empty






|

.. code-block:: Python

    import matplotlib.pyplot as plt

    import cartopy.crs as ccrs


    def plot_city_lights():
        # Define resource for the NASA night-time illumination data.
        base_uri = 'https://map1c.vis.earthdata.nasa.gov/wmts-geo/wmts.cgi'
        layer_name = 'VIIRS_CityLights_2012'

        # Create a Cartopy crs for plain and rotated lat-lon projections.
        plain_crs = ccrs.PlateCarree()
        rotated_crs = ccrs.RotatedPole(pole_longitude=120.0, pole_latitude=45.0)

        fig = plt.figure()

        # Plot WMTS data in a specific region, over a plain lat-lon map.
        ax = fig.add_subplot(1, 2, 1, projection=plain_crs)
        ax.set_extent([-6, 3, 48, 58], crs=ccrs.PlateCarree())
        ax.coastlines(resolution='50m', color='yellow')
        ax.gridlines(color='lightgrey', linestyle='-')
        # Add WMTS imaging.
        ax.add_wmts(base_uri, layer_name=layer_name)

        # Plot WMTS data on a rotated map, over the same nominal region.
        ax = fig.add_subplot(1, 2, 2, projection=rotated_crs)
        ax.set_extent([-6, 3, 48, 58], crs=ccrs.PlateCarree())
        ax.coastlines(resolution='50m', color='yellow')
        ax.gridlines(color='lightgrey', linestyle='-')
        # Add WMTS imaging.
        ax.add_wmts(base_uri, layer_name=layer_name)

        plt.show()


    if __name__ == '__main__':
        plot_city_lights()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.230 seconds)


.. _sphx_glr_download_gallery_web_services_reprojected_wmts.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: reprojected_wmts.ipynb <reprojected_wmts.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: reprojected_wmts.py <reprojected_wmts.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
